name: Python Greetings Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-pip-deps:
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'
      - name: Install dependencies
        shell: cmd
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        working-directory: python-greetings

  deploy-to-dev:
    needs: install-pip-deps
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'
      - name: Stop existing service
        shell: cmd
        run: pm2 delete greetings-app-dev & set "errorlevel=0"
      - name: Start new service
        shell: cmd
        run: pm2 start app.py --name greetings-app-dev -- --port 7001
        working-directory: python-greetings

  tests-on-dev:
    needs: deploy-to-dev
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Clone test framework
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/course-js-api-framework'
          path: 'course-js-api-framework'
      - name: Install dependencies
        shell: cmd
        run: npm install
        working-directory: course-js-api-framework
      - name: Run tests
        shell: cmd
        run: npm run greetings greetings_dev
        working-directory: course-js-api-framework

  deploy-to-staging:
    needs: tests-on-dev
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'
      - name: Stop existing service
        shell: cmd
        run: pm2 delete greetings-app-staging & set "errorlevel=0"
      - name: Start new service
        shell: cmd
        run: pm2 start app.py --name greetings-app-staging -- --port 7002
        working-directory: python-greetings

  tests-on-staging:
    needs: deploy-to-staging
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Clone test framework
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/course-js-api-framework'
          path: 'course-js-api-framework'
      - name: Install dependencies
        shell: cmd
        run: npm install
        working-directory: course-js-api-framework
      - name: Run tests
        shell: cmd
        run: npm run greetings greetings_staging
        working-directory: course-js-api-framework

  deploy-to-preprod:
    needs: tests-on-staging
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'
      - name: Stop existing service
        shell: cmd
        run: pm2 delete greetings-app-preprod & set "errorlevel=0"
      - name: Start new service
        shell: cmd
        run: pm2 start app.py --name greetings-app-preprod -- --port 7003
        working-directory: python-greetings

  tests-on-preprod:
    needs: deploy-to-preprod
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Clone test framework
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/course-js-api-framework'
          path: 'course-js-api-framework'
      - name: Install dependencies
        shell: cmd
        run: npm install
        working-directory: course-js-api-framework
      - name: Run tests
        shell: cmd
        run: npm run greetings greetings_preprod
        working-directory: course-js-api-framework

  deploy-to-prod:
    needs: tests-on-preprod
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Clone python-greetings repo
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'
      - name: Stop existing service
        shell: cmd
        run: pm2 delete greetings-app-prod & set "errorlevel=0"
      - name: Start new service
        shell: cmd
        run: pm2 start app.py --name greetings-app-prod -- --port 7004
        working-directory: python-greetings

  tests-on-prod:
    needs: deploy-to-prod
    runs-on: self-hosted
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Clone test framework
        uses: actions/checkout@v4
        with:
          repository: 'mtararujs/course-js-api-framework'
          path: 'course-js-api-framework'
      - name: Install dependencies
        shell: cmd
        run: npm install
        working-directory: course-js-api-framework
      - name: Run tests
        shell: cmd
        run: npm run greetings greetings_prod
        working-directory: course-js-api-framework
